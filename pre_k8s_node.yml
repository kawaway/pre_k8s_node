---
- hosts: all
  tasks:

# proxy for /etc/profile.d/proxy
# proxy for /etc/apt/apt.conf.d/01proxy

#  - debug: var=ansible_facts

# prerequisite
#   swapoff
#   ssh-server installed

  - name: apt sources.list for closed network install
    blockinfile:
      path: /etc/apt/sources.list
      block: |
        deb http://deb.debian.org/debian/ buster main
        deb-src http://deb.debian.org/debian/ buster main

        deb http://security.debian.org/debian-security stretch/updates main
        deb-src http://security.debian.org/debian-security stretch/updates main

        deb http://deb.debian.org/debian/ buster-updates main
        deb-src http://deb.debian.org/debian/ buster-updates main

  - name: install sudo, debian minimal not include sudo
    apt:
      name: sudo
  - name: create or modify management user for virtualbox
    user:
      name:  "{{ user }}"
      uid:   "{{ uid }}"
      group: "{{ uid }}"
      groups: sudo
      create_home: True
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_type: ecdsa
      ssh_key_bits: 256
      ssh_key_file: .ssh/ecdsa
      update_password: on_create
# sshd
  - name: security for sshd
    replace:
      path: /etc/ssh/sshd_config
      regexp: ".?PermitRootLogin.*"
      replace: "PermitRootLogin prohibit-password"

  - name: dhcp to static
    replace:
      path: /etc/network/interfaces
      regexp: "iface {{ dev_1 }}  inet dhcp"
      replace: "iface {{ dev_1 }} inet static"
  - name: static address
    blockinfile:
      path: /etc/network/interfaces
      insertafter: "iface {{ dev_1 }} inet static"
      block: |
              address {{ ipv4_1 }}
              gateway {{ ipv4gw_1 }}

  - name: set second network device
    block:
      - name: blockinfile
        blockinfile:
          path: /etc/network/interfaces
          block: |
            iface {{ dev_2 }} inet static
              address {{ ipv4_2 }}
    when: dev_2 is defined

  - name: get_dns
    shell: "grep {{ dns_server1 }} /etc/resolv.conf"
    register: get_dns
    ignore_errors: True

  - name: set dns
    block:
    - name: dns for permanent conf
      blockinfile:
        path: /etc/network/interfaces
        block: |
          dns-domain {{ dns_domain }}
          dns-nameservers {{ dns_server1 }}
          dns-nameservers {{ dns_server2 }}
    - name: dns for current conf
      command: /sbin/resolvconf -u
    when: get_dns is failed

  - name: install nsupdate for ddns
    apt:
      name: dnsutils
# nsupdate
# cron
  - name: set timezone to Asia/Tokyo
    timezone:
      name: Asia/Tokyo

  - name: install editor
    apt:
      name: vim
  - name: set default editor to vim because visudo is nano
    command: update-alternatives --set editor /usr/bin/vim.basic

  - name: ntp
    apt:
      name: chrony
  - name: adjust own network
    replace:
      path: /etc/chrony/chrony.conf
      regexp: "2.debian.pool.ntp.org"
      replace: "{{ ntp_server }}"
  - systemd:
      state: restarted
      name: chrony

  - name: enable ipv4 forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present
      sysctl_set: yes
#
  - name: get device list
    shell: "ip addr | grep '^[0-9]*: ' | grep -v veth | grep -v br | grep -v lo | grep -v docker | sed -e 's/://g' | awk '{print $2}'"
    register: device_list
  - name: security
    sysctl:
      name: net.ipv4.conf.{{ item }}.rp_filter
      value: 1
      state: present
      sysctl_set: yes
    loop: "{{ device_list.stdout_lines }}"
  - name: security
    sysctl:
      name: net.ipv4.conf.{{ item }}.rp_filter
      value: 1
      state: present
      sysctl_set: yes
    loop:
      - all
      - default 

  - name: python for apt_reposiotry/kubespray
    apt:
      name: "{{ item }}"     
    loop:
     #- python3.7
     # - python3
     # - python3-pip
     #  # https://github.com/ansible/ansible/issues/47361
     # - python3-setuptools
      - ca-certificates
      - apt-transport-https

  - name: apt-key virtualbox
    apt_key:
      url: "{{  item.url  }}" 
      id: "{{ item.id  }}"
    loop:
      - { url: 'https://www.virtualbox.org/download/oracle_vbox_2016.asc', id: 'B9F8D658297AF3EFC18D5CDFA2F683C52980AECF' }
      - { url: 'https://www.virtualbox.org/download/oracle_vbox.asc', id: '7B0FAB3A13B907435925D9C954422A4B98AB5139' }

  - name: add virtualbox in sources.list
    apt_repository:
      repo: deb https://download.virtualbox.org/virtualbox/debian stretch contrib
      filename: virtualbox
      state: present

  - name: libcurl3 for virtualbox-6.0
    apt:
      name: "{{ item }}"
    loop:
      - libcurl3

  - name: virtualbox
    apt:
      name: "{{ item }}"
      allow_unauthenticated: yes
    loop:
      - virtualbox-6.0
        #- virtualbox-5.2

  - name: vagrant
    apt:
      name: "{{ item }}"
    loop:
      - vagrant

  - name: python for kubespray
    apt:
      name: "{{ item }}"
    loop:
      - python
      - python-pip
       # https://github.com/ansible/ansible/issues/47361
      - python-setuptools

  - name: install ansible by pip3 because kubespray require ansible 2.7.8, debian10(buster) 2.7.7
    pip:
            #executable: pip3
      name: "virtualenv"
    become_user: "{{ user }}"

  - name: path for pip
    blockinfile:
      path: /home/{{ user }}/.bashrc
      block: "export PATH=$PATH:/home{{ user }}/.local/bin"
    become_user: "{{ user }}"

  - name: venvdir
    blockinfile:
      path: /home/{{ user }}/.bashrc
      block: "export VENVDIR=venv"
    become_user: "{{ user }}"

  - name: reflect PATH/VENVDIR to current shell
    shell: . /home/{{ user }}/.bashrc
    #become_user: "{{ user }}"

  - shell: echo $PATH
    register: result
    become_user: "{{ user }}"
  - debug: var=result

  - name: create venvdir
    shell: virtualenv --python=/usr/bin/python3.7 $VENVDIR
    become_user: "{{ user }}"

  - name: activate virtualenv
    blockinfile:
      path: /home/{{ user }}/.bashrc
      block: ". ~/$VENVDIR/bin/activate"
    become_user: "{{ user }}"

  - name: reflect activate to current shell
    shell: . /home/{{ user }}/$VENVDIR/bin/activate
    become_user: "{{ user }}"


  - name: kubespray
    unarchive:
      src: https://github.com/kubernetes-sigs/kubespray/archive/v{{ kubespray_version }}.tar.gz
      dest: /home/{{ user }}
      remote_src: yes
    become_user: "{{ user }}"

  - name: create venvdir
    shell: pip install ~/kubespray-{{ kubespray_version }}/requirements.txt
    become_user: "{{ user }}"
